

use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\MarkdownController;
use App\Http\Controllers\ProfileController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\ContactController;
use App\Http\Controllers\LogoutController;
use App\Http\Controllers\TaskController;
use Illuminate\Support\Facades\Route;
use Inertia\Inertia;
use Illuminate\Foundation\Application;
use Illuminate\Support\Facades\Auth;
use App\Http\Controllers\TagController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\AuthorController;
use App\Http\Controllers\Auth\PasswordResetLinkController;
use App\Http\Controllers\Auth\NewPasswordController;
use App\Http\Controllers\Auth\RegisteredUserController;

// Public routes
Route::get('/', function () {
    return Inertia::render('Welcome', [
        'canLogin' => Route::has('login'),
        'canRegister' => Route::has('register'),
        'laravelVersion' => Application::VERSION,
        'phpVersion' => PHP_VERSION,
        'auth' => Auth::user(),
    ]);
})->name('home');

// Protected routes requiring authentication
Route::middleware(['auth', 'verified'])->group(function () {
    Route::get('/dashboard', function () {
        return Inertia::render('Dashboard', [
            'auth' => Auth::user(),
        ]);
    })->name('dashboard');
});
Route::get('/', function () {
    return Inertia::render('Welcome');
})->name('public.home');

Route::get('/projects', [ProjectController::class, 'list'])->name('projects.list');
Route::get('/projects/{project}', [ProjectController::class, 'show'])->name('projects.show');

Route::get('/contact', function () {
    return Inertia::render('Contact/ContactPage', [
        'auth' => Auth::user(),
    ]);
})->name('contact');

Route::post('/contact', [ContactController::class, 'submit'])->name('contact.submit');

// Authentication routes
Route::get('/login', [AuthenticatedSessionController::class, 'create'])->name('login');
Route::post('/login', [AuthenticatedSessionController::class, 'store']);
Route::post('/logout', [LogoutController::class, 'perform'])->name('logout');

// Registration routes: goto register page if user is not authenticated/ submit registration form/ redirect to dashboard
Route::get('/register', [RegisteredUserController::class, 'create'])->name('register.create');
Route::post('/register', [RegisteredUserController::class, 'store'])->name('register');



// Password reset routes
Route::get('/forgot-password', [PasswordResetLinkController::class, 'create'])->name('password.request');
Route::post('/forgot-password', [PasswordResetLinkController::class, 'store'])->name('password.email');
Route::get('/reset-password/{token}', [NewPasswordController::class, 'create'])->name('password.reset');
Route::post('/reset-password', [NewPasswordController::class, 'store'])->name('password.update');



Route::middleware('auth')->group(function () {
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');

    // Get all tasks
    Route::get('/tasks', [TaskController::class, 'index'])->name('tasks.index');

    // Fallback route for undefined routes
    Route::fallback(function () {
        return Inertia::render('NotFound', [
            'auth' => Auth::user(),
        ]);
    });
});

// Markdown routes
// Define the /tags/{tag} route before the catch-all Markdown route:
Route::get('/tags/{tag}', [TagController::class, 'show'])->name('tags.show');
Route::get('/authors/{name}', [AuthorController::class, 'show'])->name('authors.show');
Route::get('/{folder}/{slug?}', [MarkdownController::class, 'showMd'])->name('markdown.showMd');

// // Ensure this is placed towards the end to act as a catch-all for Markdown files
// Route::get('/{folder?}/{slug?}', [MarkdownController::class, 'showMd'])
//     ->where(['folder' => '.*', 'slug' => '.*'])
//     ->name('markdown.showMd');

require __DIR__ . '/auth.php';
